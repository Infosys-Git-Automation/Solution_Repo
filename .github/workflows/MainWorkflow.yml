name: Validate and Snyk Scan

on:
  pull_request:
    types: [opened, edited, synchronize, reopened]

jobs:
  validate-and-scan:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up GitHub CLI
      run: |
        curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo dd of=/usr/share/keyrings/githubcli-archive-keyring.gpg
        sudo chmod go+r /usr/share/keyrings/githubcli-archive-keyring.gpg
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list > /dev/null
        sudo apt update
        sudo apt install gh -y
      
    - name: Get PR details
      id: pr
      env:
        GH_TOKEN:  ${{ secrets.GH_PAT }}
      run: |
        PR_BODY=$(gh pr view ${{ github.event.pull_request.number }} --json body --jq '.body')
        ORG_NAME=$(echo "$PR_BODY" | grep -oP '(?<=- \*\*Org Name\*\*: \[).*(?=\])')
        USERNAME=$(echo "$PR_BODY" | grep -oP '(?<=- \*\*Username\*\*: \[).*(?=\])')
        REPO_NAME=$(echo "$PR_BODY" | grep -oP '(?<=- \*\*Repo Name\*\*: \[).*(?=\])')
        echo "ORG_NAME=$ORG_NAME" >> $GITHUB_ENV
        echo "USERNAME=$USERNAME" >> $GITHUB_ENV
        echo "REPO_NAME=$REPO_NAME" >> $GITHUB_ENV

    - name: Validate user existence in org and repo
      id: validate
      env:
        GH_TOKEN:  ${{ secrets.GH_PAT }}
      run: |
        ORG=$ORG_NAME
        REPO=$REPO_NAME
        USER=$USERNAME

        # Check if user exists in the organization
        if ! gh api orgs/$ORG/memberships/$USER; then
          echo "User $USER does not exist in the organization $ORG"
          exit 1
        fi

        # Check if user has owner permissions in the repository
        USER_PERMISSIONS=$(gh api repos/$ORG/$REPO/collaborators/$USER/permission --jq '.permission')
        if [ "$USER_PERMISSIONS" != "admin" ]; then
          echo "User $USER does not have owner permissions in the repository $REPO"
          exit 1
        fi

    - name: Run Snyk scan
      uses: snyk/actions@master
      with:
        args: test
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
